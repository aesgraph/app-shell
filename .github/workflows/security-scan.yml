name: Security Scan

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for scanning

      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: .
          extra_args: --only-verified

      - name: Debug Gitleaks License
        run: |
          echo "üîç Checking Gitleaks license configuration..."
          echo "GITLEAKS_LICENSE is set: ${{ secrets.GITLEAKS_LICENSE != '' }}"
          echo "License length: ${#GITLEAKS_LICENSE}"
          echo "First 5 chars: ${GITLEAKS_LICENSE:0:5}..."

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
          GITLEAKS_ENABLE_UPLOAD_ARTIFACT: true
          GITLEAKS_ENABLE_SUMMARY: true

      - name: Check for .env files
        run: |
          echo "üîç Scanning for .env files..."
          if find . -name ".env*" -type f | grep -q .; then
            echo "‚ùå Found .env files:"
            find . -name ".env*" -type f
            exit 1
          else
            echo "‚úÖ No .env files found"
          fi

      - name: Check for hardcoded secrets patterns
        run: |
          echo "üîç Scanning for potential secrets patterns..."

          # Patterns to check for
          patterns=(
            "api_key"
            "api_secret"
            "access_token"
            "secret_key"
            "private_key"
            "password"
            "token"
            "key"
            "secret"
          )

          found_secrets=false

          for pattern in "${patterns[@]}"; do
            echo "Checking for pattern: $pattern"
            if grep -r -i --exclude-dir={node_modules,.git,dist,build} --exclude="*.md" "$pattern" . | grep -v "test\|example\|mock\|dummy" | grep -q .; then
              echo "‚ö†Ô∏è  Potential $pattern found:"
              grep -r -i --exclude-dir={node_modules,.git,dist,build} --exclude="*.md" "$pattern" . | grep -v "test\|example\|mock\|dummy" || true
              found_secrets=true
            fi
          done

          if [ "$found_secrets" = true ]; then
            echo "‚ùå Potential secrets found. Please review and remove if they are actual secrets."
            exit 1
          else
            echo "‚úÖ No obvious secrets patterns found"
          fi

      - name: Check for AWS credentials
        run: |
          echo "üîç Scanning for AWS credentials..."
          if grep -r -i --exclude-dir={node_modules,.git,dist,build} --exclude="*.md" "AKIA[0-9A-Z]{16}" . | grep -q .; then
            echo "‚ùå Found potential AWS access keys:"
            grep -r -i --exclude-dir={node_modules,.git,dist,build} --exclude="*.md" "AKIA[0-9A-Z]{16}" . || true
            exit 1
          else
            echo "‚úÖ No AWS access keys found"
          fi

      - name: Check for GitHub tokens
        run: |
          echo "üîç Scanning for GitHub tokens..."
          if grep -r -i --exclude-dir={node_modules,.git,dist,build} --exclude="*.md" "ghp_[a-zA-Z0-9]{36}" . | grep -q .; then
            echo "‚ùå Found potential GitHub tokens:"
            grep -r -i --exclude-dir={node_modules,.git,dist,build} --exclude="*.md" "ghp_[a-zA-Z0-9]{36}" . || true
            exit 1
          else
            echo "‚úÖ No GitHub tokens found"
          fi

      - name: Check for npm tokens
        run: |
          echo "üîç Scanning for npm tokens..."
          if grep -r -i --exclude-dir={node_modules,.git,dist,build} --exclude="*.md" "npm_[a-zA-Z0-9]{36}" . | grep -q .; then
            echo "‚ùå Found potential npm tokens:"
            grep -r -i --exclude-dir={node_modules,.git,dist,build} --exclude="*.md" "npm_[a-zA-Z0-9]{36}" . || true
            exit 1
          else
            echo "‚úÖ No npm tokens found"
          fi

      - name: Check for private keys
        run: |
          echo "üîç Scanning for private keys..."
          if grep -r -i --exclude-dir={node_modules,.git,dist,build} --exclude="*.md" "-----BEGIN PRIVATE KEY-----" . | grep -q .; then
            echo "‚ùå Found potential private keys:"
            grep -r -i --exclude-dir={node_modules,.git,dist,build} --exclude="*.md" "-----BEGIN PRIVATE KEY-----" . || true
            exit 1
          else
            echo "‚úÖ No private keys found"
          fi

      - name: Upload Gitleaks results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks-report.json
          retention-days: 30
